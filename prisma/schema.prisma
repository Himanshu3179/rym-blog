generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  name      String    @unique
  password  String
  admin     Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  blogPosts Blog[]
  likes     Like[]
  comments  Comment[]
}

model Blog {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  content    String
  imageUrl   String
  author     User      @relation(fields: [authorId], references: [id])
  authorId   String    @db.ObjectId
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  likes      Like[]
  comments   Comment[]
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId String    @db.ObjectId
}

model Like {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  blog      Blog     @relation(fields: [blogId], references: [id], onDelete: Cascade)
  blogId    String   @db.ObjectId
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
  createdAt DateTime @default(now())
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  blog      Blog     @relation(fields: [blogId], references: [id], onDelete: Cascade)
  blogId    String   @db.ObjectId
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
  content   String
  createdAt DateTime @default(now())
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  blogs     Blog[]
}
